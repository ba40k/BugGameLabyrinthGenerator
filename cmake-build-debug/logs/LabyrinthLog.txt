[2025-01-31 19:48:31.287] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.287] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.287] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.287] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.287] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.288] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:48:31.289] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 19:49:20.057] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.057] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.057] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.057] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.057] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.057] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.057] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.057] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.057] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.058] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:49:20.059] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.004] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:51:07.005] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.114] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:52:42.115] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:52:59.018] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:52:59.018] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:59.018] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:52:59.018] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:53:08.598] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:53:08.691] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:53:08.691] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:08.691] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:08.691] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:53:09.003] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.003] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.086] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:53:09.086] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.086] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.086] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:53:09.278] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.278] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.352] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:53:09.352] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.352] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.352] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:53:09.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.739] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.739] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:53:09.911] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.728] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:16.729] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.492] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:54:31.493] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 19:55:34.542] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.542] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.542] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.542] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.542] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.543] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:55:34.544] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 19:56:26.086] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.087] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 19:56:26.088] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 20:00:40.419] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.419] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.419] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.419] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.420] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:00:40.421] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 20:03:59.668] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.668] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.668] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.668] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.668] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.668] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.668] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.668] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.668] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:03:59.669] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 20:04:04.215] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.215] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.215] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.215] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:04.216] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:04.217] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 20:04:07.921] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.922] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:04:07.923] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.650] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:06:58.651] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.520] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [error] OUT OF RANGE| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::Labyrinth()

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| void Labyrinth::setCell(int x,int y,char ch
[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| void Labyrinth::setCell(int x,int y,char ch);

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable() const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isPassable(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] Entrypoint| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth::bool isBelongsToLabyrinth(int x, int y) const

[2025-01-31 20:09:59.521] [LabyrinthLogger] [info] End| Labyrinth:: isPassable() const

